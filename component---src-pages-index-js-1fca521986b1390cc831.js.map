{"version":3,"file":"component---src-pages-index-js-1fca521986b1390cc831.js","mappings":"8MA2DC,EAlDa,WAAO,IAADA,EAkBXC,EAA+B,QAAzBD,GAjBCE,EAAAA,EAAAA,gBAAe,cAiBRC,KAAKC,oBAAY,IAAAJ,OAAA,EAAtBA,EAAwBC,OAEvC,OACEI,EAAAA,cAAA,OAAKC,UAAU,QACbD,EAAAA,cAAA,KAAGC,UAAU,QACXD,EAAAA,cAAA,KAAGC,UAAU,mBAAqB,WAAQD,EAAAA,cAAA,KAAGE,KAAI,UAAYN,EAAOO,OAAUP,EAAOO,SAGtFP,aAAM,EAANA,EAAQQ,SACNJ,EAAAA,cAAA,KAAGC,UAAU,QACXD,EAAAA,cAAA,KAAGC,UAAU,iBAAmB,YAASD,EAAAA,cAAA,KAAGE,KAAI,sBAAwBN,EAAOQ,QAAWR,EAAOQ,UAIrGR,aAAM,EAANA,EAAQS,KACNL,EAAAA,cAAA,KAAGC,UAAU,QACbD,EAAAA,cAAA,KAAGC,UAAU,mBAAqB,QAAKD,EAAAA,cAAA,KAAGE,KAAMN,EAAOS,IAAI,YAAY,qBAAmBT,EAAOU,OAAO,MAK1GV,aAAM,EAANA,EAAQW,UACNP,EAAAA,cAAA,KAAGC,UAAU,QACXD,EAAAA,cAAA,KAAGC,UAAU,qBAAuB,sBAAmBD,EAAAA,cAAA,KAAGE,KAAMN,EAAOW,SAAUX,EAAOW,UAOnG,E,mBCSD,EA1DkB,SAAHC,GAA4B,IAADb,EAArBc,EAAID,EAAJC,KAAMC,EAAQF,EAARE,SACnBC,GAAkC,QAAtBhB,EAAAc,EAAKX,KAAKC,oBAAY,IAAAJ,OAAA,EAAtBA,EAAwBiB,QAAK,QACzCC,EAAQJ,EAAKK,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAENhB,EAAAA,cAACiB,EAAAA,EAAM,CAACP,SAAUA,EAAUE,MAAOD,GACjCX,EAAAA,cAACkB,EAAAA,EAAG,CAACN,MAAM,SACXZ,EAAAA,cAACmB,EAAAA,EAAG,MACJnB,EAAAA,cAACoB,EAAI,MACLpB,EAAAA,cAAA,SAAG,4BAQPA,EAAAA,cAACiB,EAAAA,EAAM,CAACP,SAAUA,EAAUE,MAAOD,GACjCX,EAAAA,cAACkB,EAAAA,EAAG,CAACN,MAAM,SACXZ,EAAAA,cAACmB,EAAAA,EAAG,MACJnB,EAAAA,cAACoB,EAAI,MACLpB,EAAAA,cAAA,MAAIqB,MAAO,CAAEC,UAAU,SACpBT,EAAMU,KAAI,SAAAC,GACT,IAAMZ,EAAQY,EAAKC,YAAYb,OAASY,EAAKE,OAAOC,KAEpD,OACE3B,EAAAA,cAAA,MAAI4B,IAAKJ,EAAKE,OAAOC,MACnB3B,EAAAA,cAAA,WACEC,UAAU,iBACV4B,WAAS,EACTC,SAAS,6BAET9B,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAAC+B,EAAAA,KAAI,CAACC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnCjC,EAAAA,cAAA,QAAMiC,SAAS,YAAYrB,KAG/BZ,EAAAA,cAAA,aAAQwB,EAAKC,YAAYS,OAE3BlC,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACEmC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CL,SAAS,kBAMrB,KAIR,C","sources":["webpack://gatsby-starter-blog/./src/components/info.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Info component\n *\n */\n\n import * as React from \"react\"\n import { useStaticQuery, graphql } from \"gatsby\"\n//  import { StaticImage } from \"gatsby-plugin-image\"\n \n const Info = () => {\n   const data = useStaticQuery(graphql`\n     query InfoQuery {\n       site {\n         siteMetadata {\n           author {\n             email\n             github\n             website\n             cv\n             cvdate\n           }\n         }\n       }\n     }\n   `)\n \n   // Set these values by editing \"siteMetadata\" in gatsby-config.js\n   const author = data.site.siteMetadata?.author\n \n   return (\n     <div className=\"info\">\n       <p className=\"item\">\n         <i className=\"fa fa-envelope\"></i> Email: <a href={`mailto:${author.email}`}>{author.email}</a>\n       </p>\n\n       {author?.github && (\n          <p className=\"item\">\n            <i className=\"fa fa-github\"></i> GitHub: <a href={`https://github.com/${author.github}`}>{author.github}</a>\n          </p>\n       )}\n\n       {author?.cv && (\n          <p className=\"item\">\n          <i className=\"fa fa-file-pdf\"></i> CV: <a href={author.cv}>Download</a> (Last updated on {author.cvdate})\n          </p>\n       )}\n\n\n       {author?.website && (\n          <p className=\"item\">\n            <i className=\"fa fa-house-user\"></i> Research Website: <a href={author.website}>{author.website}</a>\n         </p>\n       )}\n\n\n     </div>\n   )\n }\n \n export default Info\n ","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Info from \"../components/info\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"Home\" />\n        <Bio />\n        <Info />\n        <p>\n          No blog posts found ðŸ¥².\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"Home\" />\n      <Bio />\n      <Info />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {frontmatter: {show: {eq: true}}}\n      ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["_data$site$siteMetada","author","useStaticQuery","site","siteMetadata","React","className","href","email","github","cv","cvdate","website","_ref","data","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","Layout","Seo","Bio","Info","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}