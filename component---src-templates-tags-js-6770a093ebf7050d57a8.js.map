{"version":3,"file":"component---src-templates-tags-js-6770a093ebf7050d57a8.js","mappings":"iLA0DA,UAnDoB,SAAHA,GAAyC,IAADC,EAAlCC,EAAWF,EAAXE,YAAaC,EAAIH,EAAJG,KAAMC,EAAQJ,EAARI,SAChCC,EAAQH,EAARG,IACRC,EAA8BH,EAAKI,kBAA3BC,EAAKF,EAALE,MAAOC,EAAUH,EAAVG,WACTC,GAAkC,QAAtBT,EAAAE,EAAKQ,KAAKC,oBAAY,IAAAX,OAAA,EAAtBA,EAAwBY,QAAK,QACzCC,EAAeL,EAAU,SACd,IAAfA,EAAmB,GAAK,KAAG,iBACZJ,EAAG,IACpB,OACEU,EAAAA,cAACC,EAAAA,EAAM,CAACZ,SAAUA,EAAUS,MAAOH,GACnCK,EAAAA,cAACE,EAAAA,EAAG,CAACJ,MAAOC,IACZC,EAAAA,cAAA,WACEA,EAAAA,cAAA,UAAKD,GACLC,EAAAA,cAACG,EAAAA,KAAI,CAACC,GAAG,SAAQ,gBACjBJ,EAAAA,cAAA,MAAIK,MAAO,CAAEC,UAAU,SACpBb,EAAMc,KAAI,SAAAC,GAAe,IAAZC,EAAID,EAAJC,KACJC,EAASD,EAAKE,OAAdD,KACRE,EAAqCH,EAAKI,YAAlCf,EAAKc,EAALd,MAAOgB,EAAIF,EAAJE,KAAMC,EAAWH,EAAXG,YAErB,OACEf,EAAAA,cAAA,MAAIgB,IAAKN,GACPV,EAAAA,cAAA,WACEiB,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAETnB,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAACG,EAAAA,KAAI,CAACC,GAAIM,EAAMU,SAAS,OACvBpB,EAAAA,cAAA,QAAMoB,SAAS,YAAYtB,KAG/BE,EAAAA,cAAA,aAAQc,IAEVd,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACEqB,wBAAyB,CACvBC,OAAQP,GAAeN,EAAKc,SAE9BH,SAAS,kBAMrB,MAKR,C","sources":["webpack://gatsby-starter-blog/./src/templates/tags.js"],"sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\n\nconst tagTemplate = ({ pageContext, data, location }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n  return (\n    <Layout location={location} title={siteTitle}>\n    <Seo title={tagHeader} />\n    <div>\n      <h1>{tagHeader}</h1>\n      <Link to=\"/tags\">See all tags</Link>\n      <ol style={{ listStyle: `none` }}>\n        {edges.map(({ node }) => {\n          const { slug } = node.fields\n          const { title, date, description } = node.frontmatter\n\n          return (\n            <li key={slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: description || node.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </div>\n    </Layout>\n  )\n}\n\nexport default tagTemplate\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { tags: { in: [$tag] }, show: { eq: true } } \n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            description\n          }\n        }\n      }\n    }\n  }\n`"],"names":["_ref","_data$site$siteMetada","pageContext","data","location","tag","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","siteTitle","site","siteMetadata","title","tagHeader","React","Layout","Seo","Link","to","style","listStyle","map","_ref2","node","slug","fields","_node$frontmatter","frontmatter","date","description","key","className","itemScope","itemType","itemProp","dangerouslySetInnerHTML","__html","excerpt"],"sourceRoot":""}