{"version":3,"file":"component---src-pages-index-js-e5be2adaab230efeb6c3.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/components/info.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n            email\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/gabin-pic.png\"\n        width={80}\n        height={80}\n        quality={100}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          My name is <strong>{author.name}</strong>. {author?.summary || null}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","/**\n * Info component\n *\n */\n\n import * as React from \"react\"\n import { useStaticQuery, graphql } from \"gatsby\"\n//  import { StaticImage } from \"gatsby-plugin-image\"\n \n const Info = () => {\n   const data = useStaticQuery(graphql`\n     query InfoQuery {\n       site {\n         siteMetadata {\n           author {\n             email\n             github\n             website\n             cv\n           }\n         }\n       }\n     }\n   `)\n \n   // Set these values by editing \"siteMetadata\" in gatsby-config.js\n   const author = data.site.siteMetadata?.author\n \n   return (\n     <div className=\"info\">\n       {author?.email && (\n          <p class=\"item\">\n            <a href={`mailto:${author.email}`}>[Email]</a>\n          </p>\n       )}\n\n       {author?.github && (\n          <p class=\"item\">\n            <a href={`https://github.com/${author.github}`}>[GitHub]</a>\n          </p>\n       )}\n\n       {author?.website && (\n          <p class=\"item\">\n            <a href={author.website}>[Research Profile]</a>\n          </p>\n       )}\n\n       {author?.cv && (\n          <p class=\"item\">\n            / <a href={author.cv}>[CV]</a>\n          </p>\n       )}\n     </div>\n   )\n }\n \n export default Info\n ","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Info from \"../components/info\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"Home\" />\n        <Bio />\n        <Info />\n        <p>\n          No blog posts found ðŸ¥².\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"Home\" />\n      <Bio />\n      <Info />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {frontmatter: {show: {eq: true}}}\n      ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["author","useStaticQuery","site","siteMetadata","className","S","layout","formats","src","width","height","quality","alt","name","summary","Seo","description","lang","meta","title","metaDescription","defaultTitle","htmlAttributes","titleTemplate","content","property","social","twitter","concat","defaultProps","email","class","href","github","website","cv","data","location","siteTitle","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","excerpt"],"sourceRoot":""}