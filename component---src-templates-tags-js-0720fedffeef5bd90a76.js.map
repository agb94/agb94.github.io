{"version":3,"file":"component---src-templates-tags-js-0720fedffeef5bd90a76.js","mappings":"kLAyDA,UAnDoB,SAAC,GAAqC,IAAD,EAAlCA,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAChCC,EAAQH,EAARG,IACR,EAA8BF,EAAKG,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,GAAY,UAAAN,EAAKO,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAeL,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAGf,OACE,gBAAC,IAAD,CAAQD,SAAUA,EAAUQ,MAAOH,GACnC,gBAAC,IAAD,CAAQG,MAAOC,IACf,2BACE,0BAAKA,GACL,gBAAC,EAAAC,KAAD,CAAMC,GAAG,SAAT,gBACA,sBAAIC,MAAO,CAAEC,UAAU,SACpBV,EAAMW,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACR,EAAqCD,EAAKG,YAAlCV,EAAR,EAAQA,MAAOW,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,YAErB,OACE,sBAAIC,IAAKL,GACP,2BACEM,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAd,KAAD,CAAMC,GAAIK,EAAMS,SAAS,OACvB,wBAAMA,SAAS,YAAYjB,KAG/B,6BAAQW,IAEV,+BACE,qBACEO,wBAAyB,CACvBC,OAAQP,GAAeL,EAAKa,SAE9BH,SAAS","sources":["webpack://gatsby-starter-blog/./src/templates/tags.js"],"sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\n// Components\nimport { Helmet } from \"react-helmet\"\nimport { Link, graphql } from \"gatsby\"\n\nconst tagTemplate = ({ pageContext, data, location }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n  return (\n    <Layout location={location} title={siteTitle}>\n    <Helmet title={tagHeader} />\n    <div>\n      <h1>{tagHeader}</h1>\n      <Link to=\"/tags\">See all tags</Link>\n      <ol style={{ listStyle: `none` }}>\n        {edges.map(({ node }) => {\n          const { slug } = node.fields\n          const { title, date, description } = node.frontmatter\n\n          return (\n            <li key={slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: description || node.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </div>\n    </Layout>\n  )\n}\n\nexport default tagTemplate\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { tags: { in: [$tag] }, show: { eq: true } } \n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            description\n          }\n        }\n      }\n    }\n  }\n`"],"names":["pageContext","data","location","tag","allMarkdownRemark","edges","totalCount","siteTitle","site","siteMetadata","title","tagHeader","Link","to","style","listStyle","map","node","slug","fields","frontmatter","date","description","key","className","itemScope","itemType","itemProp","dangerouslySetInnerHTML","__html","excerpt"],"sourceRoot":""}